
                UDP SERVER

public class UDPServer extends Thread{

    private DatagramSocket socket;//udp komunikacija [UDP srw slusha na nekoj datagram soket]
    //a toj soket ni generira soodvetni paketi[28 line]
    private final byte [] buffer = new byte[256];//prakjanje i primanje na data

    public UDPServer(int port) {
        try {
            this.socket = new DatagramSocket(port);
        } catch (SocketException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void run() {
        //za daden datagram paket mora da specificirame koj buff kje go koristi i negovata golemina
        //mora da specificirame koj buffer da go koristime za chitanje, ispishuvanje
        //na data koi shto se razmenuvaat pomegju samiot klient-srw
        DatagramPacket packet = new DatagramPacket(buffer, buffer.length);
        //razmena na datagram pri udp-komunikacija => zatoa datagram packet

        while(true) {
            try {
                socket.receive(packet);//paketite soketot gi prima preku receive
                //site shto kje gi primi kje gi smesti vo ovoj datagram paket

                //za da gi ischitame podatocite koi shto se dobieni od  0-ot byte do kraj, gi smestuvame vo string
                String received = new String(packet.getData(),0,packet.getLength());
                System.out.println("Received: " +received);//pechatime na out

                //mora da ja znaeme ip-adrr na samiot udp-klient i portata za da
                //podatocite bidat nazad vrateni
                InetAddress address = packet.getAddress();
                int port = packet.getPort();


                packet = new DatagramPacket(buffer, buffer.length,address,port);
                socket.send(packet);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    public static void main(String[] args) {
        UDPServer server = new UDPServer(4500);
        server.start();
    }
}




        =   ==  =   =   =   =   ==  =   =   ==          =   =   =   =   =


                        UDP CLIENT


public class UDPClient extends Thread{

    private String nameServer;//ime na server
    private int port;//i portata na koja shto raboti

    private DatagramSocket socket;//<-datagram soket za da se konektira do samiot srw
    private InetAddress address;//ip-addr na srw za da se prati datagram-soketot
    private String message;//poraka koj shto treba da se prati
    private byte[]buffer; //i buffer-ot shto kje go iskoristime vo datagram paketot


    public UDPClient(String nameServer, int serverPort, String message){
        this.nameServer = nameServer;
        this.port = serverPort;
        this.message = message;

        try {
            socket = new DatagramSocket();
            this.address = InetAddress.getByName(nameServer);//od server-name -> ip-addresa
        } catch (SocketException | UnknownHostException e) {
            e.printStackTrace();
        }
    }

    @Override
    public void run() {
        buffer = this.message.getBytes();
        DatagramPacket packet = new DatagramPacket(buffer, buffer.length,this.address,this.port);

        try {
            socket.send(packet);
            packet = new DatagramPacket(buffer, buffer.length,this.address,this.port);
            socket.receive(packet);
            System.out.println(new String(packet.getData(),0, packet.getLength()));
        } catch (IOException e) {
            e.printStackTrace();
        }
    }


    public static void main(String[] args) {
        UDPClient client = new UDPClient("localhost",4500,"HelloWorld");
        client.start();
    }
}


